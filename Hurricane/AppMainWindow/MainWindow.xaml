<controls:MetroWindow x:Class="Hurricane.MainWindow"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:behaviors="clr-namespace:Hurricane.GUI.Behaviors"
                      xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                      xmlns:converter="clr-namespace:Hurricane.GUI.Converter"
                      xmlns:tb="http://www.hardcodet.net/taskbar"
                      xmlns:viewmodels="clr-namespace:Hurricane.ViewModels"
                      x:Name="WindowInstance"
                      Title="Xtest"
                      Width="500"
                      Height="400"
                      DataContext="{x:Static viewmodels:MainViewModel.Instance}"
                      GlowBrush="{DynamicResource AccentColorBrush}"
                      Icon="/Resources/App/icon.ico"
                      IsWindowDraggable="False"
                      ShowIconOnTitleBar="False"
                      SizeToContent="Manual"
                      Style="{DynamicResource CleanWindowStyleKey}">
    <controls:MetroWindow.Flyouts>
        <controls:FlyoutsControl x:Name="FlyoutControl" />
    </controls:MetroWindow.Flyouts>
    <Window.Resources>
        <converter:TrueFalseValueConverter x:Key="PlayPauseConverter"
                                           FalseValue="pack://application:,,,/Hurricane;component/Resources/MediaIcons/ThumbButtons/play.png"
                                           TrueValue="pack://application:,,,/Hurricane;component/Resources/MediaIcons/ThumbButtons/pause.png" />
        <controls:Flyout x:Key="DownloadFlyout"
                         Width="300"
                         AnimateOpacity="True"
                         Foreground="White"
                         Header="{DynamicResource Downloads}"
                         IsOpen="{Binding MusicManager.DownloadManager.IsOpen}"
                         Opacity="1"
                         Position="Right"
                         Theme="Accent"
                         x:Shared="False">
            <Grid Margin="10">
                <Grid>
                    <ScrollViewer Margin="0,5,0,0" VerticalScrollBarVisibility="Auto">
                        <ItemsControl ItemsSource="{Binding MusicManager.DownloadManager.Entries}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Button Command="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=DataContext.OpenFileLocation}" CommandParameter="{Binding DownloadFilename}">
                                        <Button.Style>
                                            <Style TargetType="Button">
                                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="Button">
                                                            <ContentPresenter />
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Button.Style>
                                        <StackPanel Margin="5" Orientation="Vertical">
                                            <Separator x:Name="Separator" />
                                            <DockPanel Margin="0,10,0,0">
                                                <Viewbox Width="15"
                                                         Height="15"
                                                         Margin="0,0,5,0"
                                                         VerticalAlignment="Center">
                                                    <Path Data="{StaticResource VectorCheck}" Fill="White" />
                                                    <Viewbox.Style>
                                                        <Style TargetType="Viewbox">
                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding IsDownloaded}" Value="true">
                                                                    <Setter Property="Visibility" Value="Visible" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Viewbox.Style>
                                                </Viewbox>
                                                <TextBlock VerticalAlignment="Center"
                                                           FontSize="16"
                                                           Text="{Binding Trackname}"
                                                           TextTrimming="CharacterEllipsis" />
                                            </DockPanel>
                                            <controls:MetroProgressBar Margin="0,5,0,0"
                                                                       VerticalAlignment="Center"
                                                                       Foreground="White"
                                                                       IsIndeterminate="{Binding IsWaiting}"
                                                                       Value="{Binding Progress}" />
                                        </StackPanel>
                                    </Button>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>
                </Grid>
            </Grid>
        </controls:Flyout>
    </Window.Resources>
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo x:Name="TaskbarInfo"
                         Description="{Binding MusicManager.CSCoreEngine.CurrentTrack}"
                         behaviors:TaskbarItemInfoBehavior.Maximum="{Binding MusicManager.CSCoreEngine.CurrentTrackLength.TotalSeconds}"
                         behaviors:TaskbarItemInfoBehavior.Progress="{Binding MusicManager.CSCoreEngine.CurrentTrackPosition.TotalSeconds}">
            <TaskbarItemInfo.ThumbButtonInfos>
                <ThumbButtonInfoCollection>
                    <ThumbButtonInfo Command="{Binding MusicManager.Commands.GoBackward}"
                                     Description="{DynamicResource PreviousTrack}"
                                     ImageSource="pack://application:,,,/Hurricane;component/Resources/MediaIcons/ThumbButtons/backward.png" />
                    <ThumbButtonInfo Command="{Binding MusicManager.Commands.TogglePlayPause}"
                                     Description="Play / Pause"
                                     ImageSource="{Binding MusicManager.CSCoreEngine.IsPlaying,
                                                           Converter={StaticResource PlayPauseConverter}}" />
                    <ThumbButtonInfo Command="{Binding MusicManager.Commands.GoForward}"
                                     Description="{DynamicResource NextTrack}"
                                     ImageSource="pack://application:,,,/Hurricane;component/Resources/MediaIcons/ThumbButtons/forward.png" />
                </ThumbButtonInfoCollection>
            </TaskbarItemInfo.ThumbButtonInfos>
        </TaskbarItemInfo>
    </Window.TaskbarItemInfo>
    <Window.InputBindings>
        <KeyBinding Key="Space" Command="{Binding MusicManager.Commands.TogglePlayPause}" />
        <KeyBinding Key="E"
                    Command="{Binding ToggleEqualizer}"
                    Modifiers="Control" />
        <KeyBinding Key="Left"
                    Command="{Binding MoveLeftCommand}"
                    Modifiers="Control" />
        <KeyBinding Key="Right"
                    Command="{Binding MoveRightCommand}"
                    Modifiers="Control" />
        <KeyBinding Key="D1"
                    Command="{Binding ChangeMainTabControlIndex}"
                    CommandParameter="0"
                    Modifiers="Control" />
        <KeyBinding Key="D2"
                    Command="{Binding ChangeMainTabControlIndex}"
                    CommandParameter="1"
                    Modifiers="Control" />
        <KeyBinding Key="D3"
                    Command="{Binding ChangeMainTabControlIndex}"
                    CommandParameter="2"
                    Modifiers="Control" />
        <KeyBinding Key="Q"
                    Command="{Binding OpenQueueManager}"
                    Modifiers="Control" />
    </Window.InputBindings>
    <Grid x:Name="ContentGrid">
        <Grid x:Name="BackgroundContainer">
            <Image x:Name="BackgroundImage" Stretch="UniformToFill" />
            <MediaElement x:Name="BackgroundMediaElement"
                          LoadedBehavior="Manual"
                          MediaEnded="BackgroundMediaElement_OnMediaEnded"
                          Stretch="UniformToFill"
                          Visibility="Collapsed"
                          Volume="0" />
        </Grid>
        <tb:TaskbarIcon x:Name="NotifyIcon"
                        IconSource="/Resources/App/icon.ico"
                        ToolTipText="Hurricane"
                        TrayMouseDoubleClick="NotifyIcon_OnTrayMouseDoubleClick"
                        Visibility="Hidden">
            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu>
                    <ContextMenu.CommandBindings>
                        <CommandBinding Command="ApplicationCommands.Close" Executed="CloseCommandHandler" />
                    </ContextMenu.CommandBindings>
                    <MenuItem Command="{Binding ShowWindowCommand}" Header="{DynamicResource Open}" />
                    <Separator />
                    <MenuItem StaysOpenOnClick="True">
                        <MenuItem.Style>
                            <Style TargetType="MenuItem">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="MenuItem">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="2*" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <Grid.Resources>
                                                    <Style TargetType="Button">
                                                        <Setter Property="Height" Value="30" />
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="Button">
                                                                    <Grid x:Name="Grid" Background="Transparent">
                                                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                                                    </Grid>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsMouseOver" Value="True">
                                                                            <Setter TargetName="Grid" Property="Background" Value="{StaticResource MenuItemSelectionFill}" />
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Grid.Resources>
                                                <Button Command="{Binding MusicManager.Commands.GoBackward}">
                                                    <Viewbox Width="12"
                                                             Height="12"
                                                             Margin="0,0,1,0"
                                                             HorizontalAlignment="Center"
                                                             VerticalAlignment="Center"
                                                             RenderOptions.BitmapScalingMode="HighQuality">
                                                        <Path Data="{StaticResource VectorFastBackward}" Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}" />
                                                    </Viewbox>
                                                </Button>
                                                <Button Grid.Column="1" Command="{Binding MusicManager.Commands.TogglePlayPause}">
                                                    <Grid>
                                                        <Viewbox Width="16"
                                                                 Height="16"
                                                                 Margin="3,0,0,0"
                                                                 Stretch="Uniform">
                                                            <Path Data="{StaticResource VectorPlay}" Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}" />
                                                            <Viewbox.Resources>
                                                                <Style TargetType="{x:Type Viewbox}">
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding MusicManager.CSCoreEngine.IsPlaying}" Value="True">
                                                                            <Setter Property="Visibility" Value="Hidden" />
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                                <Style TargetType="Path">
                                                                    <Setter Property="Fill" Value="Black" />
                                                                </Style>
                                                            </Viewbox.Resources>
                                                        </Viewbox>
                                                        <Viewbox Width="13"
                                                                 Height="15"
                                                                 Stretch="Fill">
                                                            <Path Data="{StaticResource VectorPause}" Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}" />
                                                            <Viewbox.Resources>
                                                                <Style TargetType="{x:Type Viewbox}">
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding MusicManager.CSCoreEngine.IsPlaying}" Value="False">
                                                                            <Setter Property="Visibility" Value="Hidden" />
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                                <Style TargetType="Path">
                                                                    <Setter Property="Fill" Value="Black" />
                                                                </Style>
                                                            </Viewbox.Resources>
                                                        </Viewbox>
                                                    </Grid>
                                                </Button>
                                                <Button Grid.Column="2" Command="{Binding MusicManager.Commands.GoForward}">
                                                    <Viewbox Width="12"
                                                             Height="12"
                                                             Margin="1,0,0,0"
                                                             HorizontalAlignment="Center"
                                                             VerticalAlignment="Center"
                                                             RenderOptions.BitmapScalingMode="HighQuality">
                                                        <Path Data="{StaticResource VectorFastForward}" Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}" />
                                                    </Viewbox>
                                                </Button>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </MenuItem.Style>
                    </MenuItem>
                    <MenuItem StaysOpenOnClick="True">
                        <MenuItem.Style>
                            <Style TargetType="MenuItem">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="MenuItem">
                                            <DockPanel Margin="20,5,20,5">
                                                <TextBlock Margin="0,0,10,2"
                                                           VerticalAlignment="Center"
                                                           Text="Volume:" />
                                                <Slider Width="100"
                                                        VerticalAlignment="Center"
                                                        IsEnabled="True"
                                                        LargeChange="0.1"
                                                        Maximum="1"
                                                        Minimum="0"
                                                        Value="{Binding MusicManager.CSCoreEngine.Volume}" />
                                            </DockPanel>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </MenuItem.Style>
                    </MenuItem>
                    <Separator />
                    <MenuItem Command="ApplicationCommands.Close" Header="{DynamicResource Close}" />
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>
        </tb:TaskbarIcon>
    </Grid>
</controls:MetroWindow>
